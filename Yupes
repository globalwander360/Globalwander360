@Test
public void testGetPropertyNames_Success() {
    String eventid = "evt123";
    Map<String, String> propertyIdNameMap = new HashMap<>();
    propertyIdNameMap.put("1", "Name1");
    propertyIdNameMap.put("2", "Name2");

    List<Long> mockPropertyIds = Arrays.asList(1L, 2L, 3L); // 3L is not in map

    when(transactionPropertyService.getPropertyNamesByEventidAndType(eventid, "COMPLETION_MOTIVE"))
        .thenReturn(mockPropertyIds);

    String result = yourService.getPropertyNames(eventid, propertyIdNameMap);

    assertEquals("Name1,Name2", result);
}


@Test
public void testGetPropertyNames_EmptyAfterFiltering() {
    String eventid = "evt456";
    Map<String, String> propertyIdNameMap = new HashMap<>(); // no valid entries

    List<Long> mockPropertyIds = Arrays.asList(10L, 20L);

    when(transactionPropertyService.getPropertyNamesByEventidAndType(eventid, "COMPLETION_MOTIVE"))
        .thenReturn(mockPropertyIds);

    String result = yourService.getPropertyNames(eventid, propertyIdNameMap);

    assertNull(result);
}
@Test
public void testGetPropertyNames_ExceptionThrown() {
    String eventid = "evt789";
    Map<String, String> propertyIdNameMap = new HashMap<>();

    when(transactionPropertyService.getPropertyNamesByEventidAndType(eventid, "COMPLETION_MOTIVE"))
        .thenThrow(new RuntimeException("Service error"));

    String result = yourService.getPropertyNames(eventid, propertyIdNameMap);

    assertNull(result);
}
