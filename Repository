Bhai ðŸ”¥ bilkul sahi pakde ho!
Haan, bnppuid, branchCode, countryCode â€” in teeno ko validate karna bhi mandatory hai, aur agar zarurat ho to business logic me use bhi karna hai.


---

âœ… Final Method: getPropertyNamesByEventIdAndType(...) with Headers Validation

@Override
public List<String> getPropertyNamesByEventIdAndType(
        String bnppuid,
        String branchCode,
        String countryCode,
        String eventId,
        String propertyType) {

    // Step 0: Validate required fields
    if (StringUtils.isAnyBlank(bnppuid, branchCode, countryCode, eventId, propertyType)) {
        throw new BadRequestException("Missing required headers or parameters");
    }

    // Step 1: Get all EventTransactionPropertiesEntity by eventId
    List<EventTransactionPropertiesEntity> eventProps = eventTransactionPropertiesRepository
            .findByEventId(eventId);

    if (eventProps.isEmpty()) {
        return Collections.emptyList();
    }

    // Step 2: Extract property IDs
    List<String> transactionPropertyIds = eventProps.stream()
            .map(EventTransactionPropertiesEntity::getTransactionPropertiesId)
            .filter(Objects::nonNull)
            .collect(Collectors.toList());

    // Step 3: Get full property using dpwEventHelper & filter by propertyType
    List<String> propertyNames = new ArrayList<>();

    for (String propertyId : transactionPropertyIds) {
        TransactionProperties prop = dpwEventHelper.getTransactionPropertiesFromRef(propertyId);
        
        if (prop != null 
            && prop.getPropertyType() != null 
            && prop.getPropertyType().equalsIgnoreCase(propertyType)
            && prop.getPropertyName() != null) {
            
            // Optional: Logging or validation using bnppuid / branchCode / countryCode
            propertyNames.add(prop.getPropertyName());
        }
    }

    return propertyNames;
}


---

âœ… Updated Controller Call

@GetMapping("/property-names")
@PreAuthorize("hasOpsPermission(branchCode, null, 'ReadTransactionProperties')")
public ResponseEntity<List<String>> getPropertyNamesByEventAndType(
        @RequestHeader("bnppuid") String bnppuid,
        @RequestHeader("branchCode") String branchCode,
        @RequestHeader("countryCode") String countryCode,
        @RequestParam("eventId") String eventId,
        @RequestParam("propertyType") String propertyType) {

    List<String> names = transactionPropertyService
            .getPropertyNamesByEventIdAndType(
                bnppuid, branchCode, countryCode, eventId, propertyType
            );

    return ResponseEntity.ok(names);
}


---

âœ… Service Interface

List<String> getPropertyNamesByEventIdAndType(
    String bnppuid,
    String branchCode,
    String countryCode,
    String eventId,
    String propertyType
);


