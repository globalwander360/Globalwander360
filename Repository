it('should handle transaction properties correctly and call onLoad', (done) => {
  const data = { id: 'event-001' };
  const keys = ['key1', 'key2'];
  const mockTransactionProperties = [
    { propertyType: 'COMPLETION_MOTIVE', propertyName: 'A' },
    { propertyType: 'COMPLETION_MOTIVE', propertyName: 'B' },
    { propertyType: 'OTHER', propertyName: 'Ignore' }
  ];

  jest.spyOn(component as any, 'getThrowbacks').mockReturnValue(of(true));
  jest.spyOn(initiationEventDataService, 'getTransactionPropertiesByEventId')
    .mockReturnValue(of(mockTransactionProperties));
  const onLoadSpy = jest.spyOn(component as any, 'onLoad');

  component.handleGetTransactionProperties(data, keys);

  setTimeout(() => {
    expect(onLoadSpy).toHaveBeenCalledWith({
      ...data,
      transationPropertyName: 'A,B'
    });
    done();
  }, 0);
});
